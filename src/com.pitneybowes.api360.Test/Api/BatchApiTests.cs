/*
 * Shipping APIs
 *
 * ### Introduction  The Shipping APIs include a variety of operations that allow users to manage and track their shipping requests.   Some of the key API operations available in the Shipping API includes: ### Shipment API  | Operation      | Description | | - -- -- -- -- -- | - -- -- -- -- -- |  | Get Carriers    | This operation fetches all onboarded carriers. Typically, user will use this service to get list of onboarded carriers and supported properties for those carriers.  |  | Get Countries | This operation fetches list of supported destination countries for a provided carrier and origin country.  |  | Get Services | This operation fetches a list of supported services for a carrier with respect to specific origin and destination country. |  | Get ParcelTypes| This operation fetches ParcelTypes based on carrier, origin and destination country. |  | Get Special Services| This operation fetches Special Services for a given carrier, service, origin and destination country. |  | Get Carrier Accounts| This operation retrieves onboarded Carriers with their Carrier Account Ids which uniquely identify multiple accounts of same carrier.  |  | Rate Shop and Get Single Rate| This API contains 2 operations, rate shop and single rate. Rate shop will fetch rates for all carrier services based on the given addresses (From and To), weight, and dimension for given parcelType. Single rate will get rate for specific service and special service (if requested) based on the given addresses (From and To), weight, and dimension, parcelType and serviceId with or without specialServices. Single rate will be used mainly to a rate a shipment before creating shipment.  |  | Create Shipment| This operation creates a new Shipment or Shipment Label. This is for both Domestic and International. | | Get All Shipments| This operation fetches all created Shipments. |  | Get Shipment by Id| Retrieves single shipment using Shipment Id. |  | Reprint Shipment| This operation reprints Shipment by the shipmentId. It retrieves an existing shipping label to reprint. The API sends the shipmentId returned by the original Created Shipment request. Use this only if the shipping label in the Create Shipment response was spoilt or lost. |  | Cancel Shipment| This operation cancels previously created shipment. |  
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using com.pitneybowes.api360.Client;
using com.pitneybowes.api360.Api;
// uncomment below to import models
//using com.pitneybowes.api360.Model;

namespace com.pitneybowes.api360.Test.Api
{
    /// <summary>
    ///  Class for testing BatchApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class BatchApiTests : IDisposable
    {
        private BatchApi instance;

        public BatchApiTests()
        {
            instance = new BatchApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of BatchApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' BatchApi
            //Assert.IsType<BatchApi>(instance);
        }

        /// <summary>
        /// Test BulkImportAPI
        /// </summary>
        [Fact]
        public void BulkImportAPITest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CreateBatchRequest body = null;
            //string? xPBDeveloperPartnerID = null;
            //var response = instance.BulkImportAPI(body, xPBDeveloperPartnerID);
            //Assert.IsType<ShipmentBatch>(response);
        }

        /// <summary>
        /// Test BulkImportAPIERR
        /// </summary>
        [Fact]
        public void BulkImportAPIERRTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CreateBatchRequestERR body = null;
            //string? xPBDeveloperPartnerID = null;
            //var response = instance.BulkImportAPIERR(body, xPBDeveloperPartnerID);
            //Assert.IsType<ShipmentBatchResponseERR>(response);
        }

        /// <summary>
        /// Test CreateBulkShipmentsAPI
        /// </summary>
        [Fact]
        public void CreateBulkShipmentsAPITest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CreateBulkShipmentsAPIRequest body = null;
            //string? xPBDeveloperPartnerID = null;
            //var response = instance.CreateBulkShipmentsAPI(body, xPBDeveloperPartnerID);
            //Assert.IsType<BulkShipmentResponse>(response);
        }

        /// <summary>
        /// Test CreateBulkShipmentsAPIERR
        /// </summary>
        [Fact]
        public void CreateBulkShipmentsAPIERRTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CreateBulkShipmentsAPIERRRequest body = null;
            //string? xPBDeveloperPartnerID = null;
            //var response = instance.CreateBulkShipmentsAPIERR(body, xPBDeveloperPartnerID);
            //Assert.IsType<BulkShipmentResponseERR>(response);
        }

        /// <summary>
        /// Test GetBatchStatusAPI
        /// </summary>
        [Fact]
        public void GetBatchStatusAPITest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string batchId = null;
            //string? xPBDeveloperPartnerID = null;
            //var response = instance.GetBatchStatusAPI(batchId, xPBDeveloperPartnerID);
            //Assert.IsType<GetStatusDetailedResponse>(response);
        }

        /// <summary>
        /// Test GetShipmentDetailsForBatchAPI
        /// </summary>
        [Fact]
        public void GetShipmentDetailsForBatchAPITest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string batchId = null;
            //string? xPBDeveloperPartnerID = null;
            //int? page = null;
            //int? size = null;
            //string? status = null;
            //string? step = null;
            //var response = instance.GetShipmentDetailsForBatchAPI(batchId, xPBDeveloperPartnerID, page, size, status, step);
            //Assert.IsType<GetShipmentsForBatch>(response);
        }

        /// <summary>
        /// Test ProcessBatchAPI
        /// </summary>
        [Fact]
        public void ProcessBatchAPITest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string batchId = null;
            //string? xPBDeveloperPartnerID = null;
            //var response = instance.ProcessBatchAPI(batchId, xPBDeveloperPartnerID);
            //Assert.IsType<ProcessShipmentResponse>(response);
        }

        /// <summary>
        /// Test VoidShippingLabel
        /// </summary>
        [Fact]
        public void VoidShippingLabelTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string batchId = null;
            //string? xPBDeveloperPartnerID = null;
            //VoidBatchRequest? voidBatchRequest = null;
            //var response = instance.VoidShippingLabel(batchId, xPBDeveloperPartnerID, voidBatchRequest);
            //Assert.IsType<VoidBatchResponse>(response);
        }
    }
}
