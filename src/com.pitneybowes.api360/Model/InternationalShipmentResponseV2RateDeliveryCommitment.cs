// <auto-generated>
/*
 * Shipping APIs
 *
 * ### Introduction  The Shipping APIs include a variety of operations that allow users to manage and track their shipping requests.   Some of the key API operations available in the Shipping API includes: ### Shipment API  | Operation      | Description | | - -- -- -- -- -- | - -- -- -- -- -- |  | Get Carriers    | The operation fetches all onboarded carriers. Typically, user will use this service to get list of onboarded carriers and supported properties for those carriers. |  | Get Countries | The operation fetches list of supported destination countries for a provided carrier and origin country. |  | Get Services | The operation fetches a list of supported services for a carrier with respect to specific origin and destination country. |  | Get ParcelTypes| The operation fetches ParcelTypes based on carrier, origin, and destination country. |  | Get Special Services| The operation fetches Special Services for a given carrier, service, origin, and destination country. |  | Get Carrier Accounts| The operation retrieves onboarded Carriers with their Carrier Account Ids which uniquely identify multiple accounts of same carrier. |  | Rate Shop and Get Single Rate| This API contains 2 operations, rate shop and single rate. Rate shop will fetch rates for all carrier services based on the given addresses (From and To), weight, and dimension for given parcelType. Single rate will get rate for specific service and special service (if requested) based on the given addresses (From and To), weight, and dimension, parcelType and serviceId with or without specialServices. Single rate will be used to rate a shipment before creating it. |  | Create Shipment| The operation creates a new Shipment or Shipment Label. This is for both Domestic and International. | | Get All Shipments| The operation fetches all created Shipments. |  | Get Shipment by Id| Retrieves single shipment using Shipment Id. |  | Reprint Shipment| The operation reprints Shipment by the shipmentId. It retrieves an existing shipping label to reprint. The API sends the shipmentId returned by the original Created Shipment request. Use this only if the shipping label in the ‘Create Shipment’ response is missing or lost. |  | Cancel Shipment| The operation cancels previously created shipment. |  
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

#nullable enable

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Text.Json;
using System.Text.Json.Serialization;
using System.ComponentModel.DataAnnotations;
using com.pitneybowes.api360.Client;

namespace com.pitneybowes.api360.Model
{
    /// <summary>
    /// Check for estimated delivery date, guarantee (if any), and number of days for shipment to be delivered.
    /// </summary>
    public partial class InternationalShipmentResponseV2RateDeliveryCommitment : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="InternationalShipmentResponseV2RateDeliveryCommitment" /> class.
        /// </summary>
        /// <param name="additionalDetails">Additional information about the delivery.</param>
        /// <param name="guarantee">Checks if there is any guarantee or committment for shipment delivery.</param>
        /// <param name="maxEstimatedNumberOfDays">Maximum number of estimated days for delivery.</param>
        /// <param name="minEstimatedNumberOfDays">Minimum number of estimated days for delivery.</param>
        [JsonConstructor]
        public InternationalShipmentResponseV2RateDeliveryCommitment(Option<string?> additionalDetails = default, Option<string?> guarantee = default, Option<string?> maxEstimatedNumberOfDays = default, Option<string?> minEstimatedNumberOfDays = default)
        {
            AdditionalDetailsOption = additionalDetails;
            GuaranteeOption = guarantee;
            MaxEstimatedNumberOfDaysOption = maxEstimatedNumberOfDays;
            MinEstimatedNumberOfDaysOption = minEstimatedNumberOfDays;
            OnCreated();
        }

        partial void OnCreated();

        /// <summary>
        /// Used to track the state of AdditionalDetails
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<string?> AdditionalDetailsOption { get; private set; }

        /// <summary>
        /// Additional information about the delivery.
        /// </summary>
        /// <value>Additional information about the delivery.</value>
        /* <example>6 - 10 business days to many major markets</example> */
        [JsonPropertyName("additionalDetails")]
        public string? AdditionalDetails { get { return this.AdditionalDetailsOption; } set { this.AdditionalDetailsOption = new(value); } }

        /// <summary>
        /// Used to track the state of Guarantee
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<string?> GuaranteeOption { get; private set; }

        /// <summary>
        /// Checks if there is any guarantee or committment for shipment delivery.
        /// </summary>
        /// <value>Checks if there is any guarantee or committment for shipment delivery.</value>
        /* <example>NONE</example> */
        [JsonPropertyName("guarantee")]
        public string? Guarantee { get { return this.GuaranteeOption; } set { this.GuaranteeOption = new(value); } }

        /// <summary>
        /// Used to track the state of MaxEstimatedNumberOfDays
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<string?> MaxEstimatedNumberOfDaysOption { get; private set; }

        /// <summary>
        /// Maximum number of estimated days for delivery.
        /// </summary>
        /// <value>Maximum number of estimated days for delivery.</value>
        /* <example>10</example> */
        [JsonPropertyName("maxEstimatedNumberOfDays")]
        public string? MaxEstimatedNumberOfDays { get { return this.MaxEstimatedNumberOfDaysOption; } set { this.MaxEstimatedNumberOfDaysOption = new(value); } }

        /// <summary>
        /// Used to track the state of MinEstimatedNumberOfDays
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<string?> MinEstimatedNumberOfDaysOption { get; private set; }

        /// <summary>
        /// Minimum number of estimated days for delivery.
        /// </summary>
        /// <value>Minimum number of estimated days for delivery.</value>
        /* <example>6</example> */
        [JsonPropertyName("minEstimatedNumberOfDays")]
        public string? MinEstimatedNumberOfDays { get { return this.MinEstimatedNumberOfDaysOption; } set { this.MinEstimatedNumberOfDaysOption = new(value); } }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class InternationalShipmentResponseV2RateDeliveryCommitment {\n");
            sb.Append("  AdditionalDetails: ").Append(AdditionalDetails).Append("\n");
            sb.Append("  Guarantee: ").Append(Guarantee).Append("\n");
            sb.Append("  MaxEstimatedNumberOfDays: ").Append(MaxEstimatedNumberOfDays).Append("\n");
            sb.Append("  MinEstimatedNumberOfDays: ").Append(MinEstimatedNumberOfDays).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

    /// <summary>
    /// A Json converter for type <see cref="InternationalShipmentResponseV2RateDeliveryCommitment" />
    /// </summary>
    public class InternationalShipmentResponseV2RateDeliveryCommitmentJsonConverter : JsonConverter<InternationalShipmentResponseV2RateDeliveryCommitment>
    {
        /// <summary>
        /// Deserializes json to <see cref="InternationalShipmentResponseV2RateDeliveryCommitment" />
        /// </summary>
        /// <param name="utf8JsonReader"></param>
        /// <param name="typeToConvert"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <returns></returns>
        /// <exception cref="JsonException"></exception>
        public override InternationalShipmentResponseV2RateDeliveryCommitment Read(ref Utf8JsonReader utf8JsonReader, Type typeToConvert, JsonSerializerOptions jsonSerializerOptions)
        {
            int currentDepth = utf8JsonReader.CurrentDepth;

            if (utf8JsonReader.TokenType != JsonTokenType.StartObject && utf8JsonReader.TokenType != JsonTokenType.StartArray)
                throw new JsonException();

            JsonTokenType startingTokenType = utf8JsonReader.TokenType;

            Option<string?> additionalDetails = default;
            Option<string?> guarantee = default;
            Option<string?> maxEstimatedNumberOfDays = default;
            Option<string?> minEstimatedNumberOfDays = default;

            while (utf8JsonReader.Read())
            {
                if (startingTokenType == JsonTokenType.StartObject && utf8JsonReader.TokenType == JsonTokenType.EndObject && currentDepth == utf8JsonReader.CurrentDepth)
                    break;

                if (startingTokenType == JsonTokenType.StartArray && utf8JsonReader.TokenType == JsonTokenType.EndArray && currentDepth == utf8JsonReader.CurrentDepth)
                    break;

                if (utf8JsonReader.TokenType == JsonTokenType.PropertyName && currentDepth == utf8JsonReader.CurrentDepth - 1)
                {
                    string? localVarJsonPropertyName = utf8JsonReader.GetString();
                    utf8JsonReader.Read();

                    switch (localVarJsonPropertyName)
                    {
                        case "additionalDetails":
                            additionalDetails = new Option<string?>(utf8JsonReader.GetString()!);
                            break;
                        case "guarantee":
                            guarantee = new Option<string?>(utf8JsonReader.GetString()!);
                            break;
                        case "maxEstimatedNumberOfDays":
                            maxEstimatedNumberOfDays = new Option<string?>(utf8JsonReader.GetString()!);
                            break;
                        case "minEstimatedNumberOfDays":
                            minEstimatedNumberOfDays = new Option<string?>(utf8JsonReader.GetString()!);
                            break;
                        default:
                            break;
                    }
                }
            }

            if (additionalDetails.IsSet && additionalDetails.Value == null)
                throw new ArgumentNullException(nameof(additionalDetails), "Property is not nullable for class InternationalShipmentResponseV2RateDeliveryCommitment.");

            if (guarantee.IsSet && guarantee.Value == null)
                throw new ArgumentNullException(nameof(guarantee), "Property is not nullable for class InternationalShipmentResponseV2RateDeliveryCommitment.");

            if (maxEstimatedNumberOfDays.IsSet && maxEstimatedNumberOfDays.Value == null)
                throw new ArgumentNullException(nameof(maxEstimatedNumberOfDays), "Property is not nullable for class InternationalShipmentResponseV2RateDeliveryCommitment.");

            if (minEstimatedNumberOfDays.IsSet && minEstimatedNumberOfDays.Value == null)
                throw new ArgumentNullException(nameof(minEstimatedNumberOfDays), "Property is not nullable for class InternationalShipmentResponseV2RateDeliveryCommitment.");

            return new InternationalShipmentResponseV2RateDeliveryCommitment(additionalDetails, guarantee, maxEstimatedNumberOfDays, minEstimatedNumberOfDays);
        }

        /// <summary>
        /// Serializes a <see cref="InternationalShipmentResponseV2RateDeliveryCommitment" />
        /// </summary>
        /// <param name="writer"></param>
        /// <param name="internationalShipmentResponseV2RateDeliveryCommitment"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <exception cref="NotImplementedException"></exception>
        public override void Write(Utf8JsonWriter writer, InternationalShipmentResponseV2RateDeliveryCommitment internationalShipmentResponseV2RateDeliveryCommitment, JsonSerializerOptions jsonSerializerOptions)
        {
            writer.WriteStartObject();

            WriteProperties(writer, internationalShipmentResponseV2RateDeliveryCommitment, jsonSerializerOptions);
            writer.WriteEndObject();
        }

        /// <summary>
        /// Serializes the properties of <see cref="InternationalShipmentResponseV2RateDeliveryCommitment" />
        /// </summary>
        /// <param name="writer"></param>
        /// <param name="internationalShipmentResponseV2RateDeliveryCommitment"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <exception cref="NotImplementedException"></exception>
        public void WriteProperties(Utf8JsonWriter writer, InternationalShipmentResponseV2RateDeliveryCommitment internationalShipmentResponseV2RateDeliveryCommitment, JsonSerializerOptions jsonSerializerOptions)
        {
            if (internationalShipmentResponseV2RateDeliveryCommitment.AdditionalDetailsOption.IsSet && internationalShipmentResponseV2RateDeliveryCommitment.AdditionalDetails == null)
                throw new ArgumentNullException(nameof(internationalShipmentResponseV2RateDeliveryCommitment.AdditionalDetails), "Property is required for class InternationalShipmentResponseV2RateDeliveryCommitment.");

            if (internationalShipmentResponseV2RateDeliveryCommitment.GuaranteeOption.IsSet && internationalShipmentResponseV2RateDeliveryCommitment.Guarantee == null)
                throw new ArgumentNullException(nameof(internationalShipmentResponseV2RateDeliveryCommitment.Guarantee), "Property is required for class InternationalShipmentResponseV2RateDeliveryCommitment.");

            if (internationalShipmentResponseV2RateDeliveryCommitment.MaxEstimatedNumberOfDaysOption.IsSet && internationalShipmentResponseV2RateDeliveryCommitment.MaxEstimatedNumberOfDays == null)
                throw new ArgumentNullException(nameof(internationalShipmentResponseV2RateDeliveryCommitment.MaxEstimatedNumberOfDays), "Property is required for class InternationalShipmentResponseV2RateDeliveryCommitment.");

            if (internationalShipmentResponseV2RateDeliveryCommitment.MinEstimatedNumberOfDaysOption.IsSet && internationalShipmentResponseV2RateDeliveryCommitment.MinEstimatedNumberOfDays == null)
                throw new ArgumentNullException(nameof(internationalShipmentResponseV2RateDeliveryCommitment.MinEstimatedNumberOfDays), "Property is required for class InternationalShipmentResponseV2RateDeliveryCommitment.");

            if (internationalShipmentResponseV2RateDeliveryCommitment.AdditionalDetailsOption.IsSet)
                writer.WriteString("additionalDetails", internationalShipmentResponseV2RateDeliveryCommitment.AdditionalDetails);

            if (internationalShipmentResponseV2RateDeliveryCommitment.GuaranteeOption.IsSet)
                writer.WriteString("guarantee", internationalShipmentResponseV2RateDeliveryCommitment.Guarantee);

            if (internationalShipmentResponseV2RateDeliveryCommitment.MaxEstimatedNumberOfDaysOption.IsSet)
                writer.WriteString("maxEstimatedNumberOfDays", internationalShipmentResponseV2RateDeliveryCommitment.MaxEstimatedNumberOfDays);

            if (internationalShipmentResponseV2RateDeliveryCommitment.MinEstimatedNumberOfDaysOption.IsSet)
                writer.WriteString("minEstimatedNumberOfDays", internationalShipmentResponseV2RateDeliveryCommitment.MinEstimatedNumberOfDays);
        }
    }
}
