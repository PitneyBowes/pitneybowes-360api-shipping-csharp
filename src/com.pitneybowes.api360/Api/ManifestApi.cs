/*
 * Shipping APIs
 *
 * ### Introduction  The Shipping APIs include a variety of operations that allow users to manage and track their shipping requests.   Some of the key API operations available in the Shipping API includes: ### Shipment API  | Operation      | Description | | - -- -- -- -- -- | - -- -- -- -- -- |  | Get Carriers    | This operation fetches all onboarded carriers. Typically, user will use this service to get list of onboarded carriers and supported properties for those carriers.  |  | Get Countries | This operation fetches list of supported destination countries for a provided carrier and origin country.  |  | Get Services | This operation fetches a list of supported services for a carrier with respect to specific origin and destination country. |  | Get ParcelTypes| This operation fetches ParcelTypes based on carrier, origin and destination country. |  | Get Special Services| This operation fetches Special Services for a given carrier, service, origin and destination country. |  | Get Carrier Accounts| This operation retrieves onboarded Carriers with their Carrier Account Ids which uniquely identify multiple accounts of same carrier.  |  | Rate Shop and Get Single Rate| This API contains 2 operations, rate shop and single rate. Rate shop will fetch rates for all carrier services based on the given addresses (From and To), weight, and dimension for given parcelType. Single rate will get rate for specific service and special service (if requested) based on the given addresses (From and To), weight, and dimension, parcelType and serviceId with or without specialServices. Single rate will be used mainly to a rate a shipment before creating shipment.  |  | Create Shipment| This operation creates a new Shipment or Shipment Label. This is for both Domestic and International. | | Get All Shipments| This operation fetches all created Shipments. |  | Get Shipment by Id| Retrieves single shipment using Shipment Id. |  | Reprint Shipment| This operation reprints Shipment by the shipmentId. It retrieves an existing shipping label to reprint. The API sends the shipmentId returned by the original Created Shipment request. Use this only if the shipping label in the Create Shipment response was spoilt or lost. |  | Cancel Shipment| This operation cancels previously created shipment. |  
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Net;
using System.Net.Mime;
using com.pitneybowes.api360.Client;
using com.pitneybowes.api360.Model;

namespace com.pitneybowes.api360.Api
{

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IManifestApiSync : IApiAccessor
    {
        #region Synchronous Operations
        /// <summary>
        /// Create Manifest
        /// </summary>
        /// <remarks>
        /// This operation creates an end-of-day manifest (a compilation of information about all shipments) that combines all shipments of the day into a single form or electronic record, depending on the carrier. For different carriers, the Manifest process varies, e.g., USPS use SCAN Form while FedEx has Manifest Form.
        /// </remarks>
        /// <exception cref="com.pitneybowes.api360.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xPBDeveloperPartnerID">This is the Developer Partner ID. When the developer is the only partner, this field is not required. (optional)</param>
        /// <param name="compactResponse">This header defines if the response required is detailed or compact. When value is set to true, it will only return manifest details in response.  (optional)</param>
        /// <param name="createManifestRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>CreateManifest200Response</returns>
        CreateManifest200Response CreateManifest(string? xPBDeveloperPartnerID = default(string?), bool? compactResponse = default(bool?), CreateManifestRequest? createManifestRequest = default(CreateManifestRequest?), int operationIndex = 0);

        /// <summary>
        /// Create Manifest
        /// </summary>
        /// <remarks>
        /// This operation creates an end-of-day manifest (a compilation of information about all shipments) that combines all shipments of the day into a single form or electronic record, depending on the carrier. For different carriers, the Manifest process varies, e.g., USPS use SCAN Form while FedEx has Manifest Form.
        /// </remarks>
        /// <exception cref="com.pitneybowes.api360.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xPBDeveloperPartnerID">This is the Developer Partner ID. When the developer is the only partner, this field is not required. (optional)</param>
        /// <param name="compactResponse">This header defines if the response required is detailed or compact. When value is set to true, it will only return manifest details in response.  (optional)</param>
        /// <param name="createManifestRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of CreateManifest200Response</returns>
        ApiResponse<CreateManifest200Response> CreateManifestWithHttpInfo(string? xPBDeveloperPartnerID = default(string?), bool? compactResponse = default(bool?), CreateManifestRequest? createManifestRequest = default(CreateManifestRequest?), int operationIndex = 0);
        /// <summary>
        /// Reprint manifest
        /// </summary>
        /// <remarks>
        /// This operation reprints a manifest for which the initial created manifest request was successful.
        /// </remarks>
        /// <exception cref="com.pitneybowes.api360.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xPBDeveloperPartnerID">This is the Developer Partner ID. When the developer is the only partner, this field is not required. (optional)</param>
        /// <param name="compactResponse">This header defines if the response required is detailed or compact. When value is set to true, it will only return manifest details in response. (optional)</param>
        /// <param name="reprintManifestRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>CreateManifest200Response</returns>
        CreateManifest200Response ReprintManifest(string? xPBDeveloperPartnerID = default(string?), bool? compactResponse = default(bool?), ReprintManifestRequest? reprintManifestRequest = default(ReprintManifestRequest?), int operationIndex = 0);

        /// <summary>
        /// Reprint manifest
        /// </summary>
        /// <remarks>
        /// This operation reprints a manifest for which the initial created manifest request was successful.
        /// </remarks>
        /// <exception cref="com.pitneybowes.api360.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xPBDeveloperPartnerID">This is the Developer Partner ID. When the developer is the only partner, this field is not required. (optional)</param>
        /// <param name="compactResponse">This header defines if the response required is detailed or compact. When value is set to true, it will only return manifest details in response. (optional)</param>
        /// <param name="reprintManifestRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of CreateManifest200Response</returns>
        ApiResponse<CreateManifest200Response> ReprintManifestWithHttpInfo(string? xPBDeveloperPartnerID = default(string?), bool? compactResponse = default(bool?), ReprintManifestRequest? reprintManifestRequest = default(ReprintManifestRequest?), int operationIndex = 0);
        #endregion Synchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IManifestApiAsync : IApiAccessor
    {
        #region Asynchronous Operations
        /// <summary>
        /// Create Manifest
        /// </summary>
        /// <remarks>
        /// This operation creates an end-of-day manifest (a compilation of information about all shipments) that combines all shipments of the day into a single form or electronic record, depending on the carrier. For different carriers, the Manifest process varies, e.g., USPS use SCAN Form while FedEx has Manifest Form.
        /// </remarks>
        /// <exception cref="com.pitneybowes.api360.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xPBDeveloperPartnerID">This is the Developer Partner ID. When the developer is the only partner, this field is not required. (optional)</param>
        /// <param name="compactResponse">This header defines if the response required is detailed or compact. When value is set to true, it will only return manifest details in response.  (optional)</param>
        /// <param name="createManifestRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of CreateManifest200Response</returns>
        System.Threading.Tasks.Task<CreateManifest200Response> CreateManifestAsync(string? xPBDeveloperPartnerID = default(string?), bool? compactResponse = default(bool?), CreateManifestRequest? createManifestRequest = default(CreateManifestRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Create Manifest
        /// </summary>
        /// <remarks>
        /// This operation creates an end-of-day manifest (a compilation of information about all shipments) that combines all shipments of the day into a single form or electronic record, depending on the carrier. For different carriers, the Manifest process varies, e.g., USPS use SCAN Form while FedEx has Manifest Form.
        /// </remarks>
        /// <exception cref="com.pitneybowes.api360.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xPBDeveloperPartnerID">This is the Developer Partner ID. When the developer is the only partner, this field is not required. (optional)</param>
        /// <param name="compactResponse">This header defines if the response required is detailed or compact. When value is set to true, it will only return manifest details in response.  (optional)</param>
        /// <param name="createManifestRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (CreateManifest200Response)</returns>
        System.Threading.Tasks.Task<ApiResponse<CreateManifest200Response>> CreateManifestWithHttpInfoAsync(string? xPBDeveloperPartnerID = default(string?), bool? compactResponse = default(bool?), CreateManifestRequest? createManifestRequest = default(CreateManifestRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Reprint manifest
        /// </summary>
        /// <remarks>
        /// This operation reprints a manifest for which the initial created manifest request was successful.
        /// </remarks>
        /// <exception cref="com.pitneybowes.api360.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xPBDeveloperPartnerID">This is the Developer Partner ID. When the developer is the only partner, this field is not required. (optional)</param>
        /// <param name="compactResponse">This header defines if the response required is detailed or compact. When value is set to true, it will only return manifest details in response. (optional)</param>
        /// <param name="reprintManifestRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of CreateManifest200Response</returns>
        System.Threading.Tasks.Task<CreateManifest200Response> ReprintManifestAsync(string? xPBDeveloperPartnerID = default(string?), bool? compactResponse = default(bool?), ReprintManifestRequest? reprintManifestRequest = default(ReprintManifestRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Reprint manifest
        /// </summary>
        /// <remarks>
        /// This operation reprints a manifest for which the initial created manifest request was successful.
        /// </remarks>
        /// <exception cref="com.pitneybowes.api360.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xPBDeveloperPartnerID">This is the Developer Partner ID. When the developer is the only partner, this field is not required. (optional)</param>
        /// <param name="compactResponse">This header defines if the response required is detailed or compact. When value is set to true, it will only return manifest details in response. (optional)</param>
        /// <param name="reprintManifestRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (CreateManifest200Response)</returns>
        System.Threading.Tasks.Task<ApiResponse<CreateManifest200Response>> ReprintManifestWithHttpInfoAsync(string? xPBDeveloperPartnerID = default(string?), bool? compactResponse = default(bool?), ReprintManifestRequest? reprintManifestRequest = default(ReprintManifestRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        #endregion Asynchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IManifestApi : IManifestApiSync, IManifestApiAsync
    {

    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public partial class ManifestApi : IManifestApi
    {
        private com.pitneybowes.api360.Client.ExceptionFactory _exceptionFactory = (name, response) => null;

        /// <summary>
        /// Initializes a new instance of the <see cref="ManifestApi"/> class.
        /// </summary>
        /// <returns></returns>
        public ManifestApi() : this((string)null)
        {
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="ManifestApi"/> class.
        /// </summary>
        /// <returns></returns>
        public ManifestApi(string basePath)
        {
            this.Configuration = com.pitneybowes.api360.Client.Configuration.MergeConfigurations(
                com.pitneybowes.api360.Client.GlobalConfiguration.Instance,
                new com.pitneybowes.api360.Client.Configuration { BasePath = basePath }
            );
            this.Client = new com.pitneybowes.api360.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new com.pitneybowes.api360.Client.ApiClient(this.Configuration.BasePath);
            this.ExceptionFactory = com.pitneybowes.api360.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="ManifestApi"/> class
        /// using Configuration object
        /// </summary>
        /// <param name="configuration">An instance of Configuration</param>
        /// <returns></returns>
        public ManifestApi(com.pitneybowes.api360.Client.Configuration configuration)
        {
            if (configuration == null) throw new ArgumentNullException("configuration");

            this.Configuration = com.pitneybowes.api360.Client.Configuration.MergeConfigurations(
                com.pitneybowes.api360.Client.GlobalConfiguration.Instance,
                configuration
            );
            this.Client = new com.pitneybowes.api360.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new com.pitneybowes.api360.Client.ApiClient(this.Configuration.BasePath);
            ExceptionFactory = com.pitneybowes.api360.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="ManifestApi"/> class
        /// using a Configuration object and client instance.
        /// </summary>
        /// <param name="client">The client interface for synchronous API access.</param>
        /// <param name="asyncClient">The client interface for asynchronous API access.</param>
        /// <param name="configuration">The configuration object.</param>
        public ManifestApi(com.pitneybowes.api360.Client.ISynchronousClient client, com.pitneybowes.api360.Client.IAsynchronousClient asyncClient, com.pitneybowes.api360.Client.IReadableConfiguration configuration)
        {
            if (client == null) throw new ArgumentNullException("client");
            if (asyncClient == null) throw new ArgumentNullException("asyncClient");
            if (configuration == null) throw new ArgumentNullException("configuration");

            this.Client = client;
            this.AsynchronousClient = asyncClient;
            this.Configuration = configuration;
            this.ExceptionFactory = com.pitneybowes.api360.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// The client for accessing this underlying API asynchronously.
        /// </summary>
        public com.pitneybowes.api360.Client.IAsynchronousClient AsynchronousClient { get; set; }

        /// <summary>
        /// The client for accessing this underlying API synchronously.
        /// </summary>
        public com.pitneybowes.api360.Client.ISynchronousClient Client { get; set; }

        /// <summary>
        /// Gets the base path of the API client.
        /// </summary>
        /// <value>The base path</value>
        public string GetBasePath()
        {
            return this.Configuration.BasePath;
        }

        /// <summary>
        /// Gets or sets the configuration object
        /// </summary>
        /// <value>An instance of the Configuration</value>
        public com.pitneybowes.api360.Client.IReadableConfiguration Configuration { get; set; }

        /// <summary>
        /// Provides a factory method hook for the creation of exceptions.
        /// </summary>
        public com.pitneybowes.api360.Client.ExceptionFactory ExceptionFactory
        {
            get
            {
                if (_exceptionFactory != null && _exceptionFactory.GetInvocationList().Length > 1)
                {
                    throw new InvalidOperationException("Multicast delegate for ExceptionFactory is unsupported.");
                }
                return _exceptionFactory;
            }
            set { _exceptionFactory = value; }
        }

        /// <summary>
        /// Create Manifest This operation creates an end-of-day manifest (a compilation of information about all shipments) that combines all shipments of the day into a single form or electronic record, depending on the carrier. For different carriers, the Manifest process varies, e.g., USPS use SCAN Form while FedEx has Manifest Form.
        /// </summary>
        /// <exception cref="com.pitneybowes.api360.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xPBDeveloperPartnerID">This is the Developer Partner ID. When the developer is the only partner, this field is not required. (optional)</param>
        /// <param name="compactResponse">This header defines if the response required is detailed or compact. When value is set to true, it will only return manifest details in response.  (optional)</param>
        /// <param name="createManifestRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>CreateManifest200Response</returns>
        public CreateManifest200Response CreateManifest(string? xPBDeveloperPartnerID = default(string?), bool? compactResponse = default(bool?), CreateManifestRequest? createManifestRequest = default(CreateManifestRequest?), int operationIndex = 0)
        {
            com.pitneybowes.api360.Client.ApiResponse<CreateManifest200Response> localVarResponse = CreateManifestWithHttpInfo(xPBDeveloperPartnerID, compactResponse, createManifestRequest);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Create Manifest This operation creates an end-of-day manifest (a compilation of information about all shipments) that combines all shipments of the day into a single form or electronic record, depending on the carrier. For different carriers, the Manifest process varies, e.g., USPS use SCAN Form while FedEx has Manifest Form.
        /// </summary>
        /// <exception cref="com.pitneybowes.api360.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xPBDeveloperPartnerID">This is the Developer Partner ID. When the developer is the only partner, this field is not required. (optional)</param>
        /// <param name="compactResponse">This header defines if the response required is detailed or compact. When value is set to true, it will only return manifest details in response.  (optional)</param>
        /// <param name="createManifestRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of CreateManifest200Response</returns>
        public com.pitneybowes.api360.Client.ApiResponse<CreateManifest200Response> CreateManifestWithHttpInfo(string? xPBDeveloperPartnerID = default(string?), bool? compactResponse = default(bool?), CreateManifestRequest? createManifestRequest = default(CreateManifestRequest?), int operationIndex = 0)
        {
            com.pitneybowes.api360.Client.RequestOptions localVarRequestOptions = new com.pitneybowes.api360.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = com.pitneybowes.api360.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = com.pitneybowes.api360.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (xPBDeveloperPartnerID != null)
            {
                localVarRequestOptions.HeaderParameters.Add("X-PB-Developer-Partner-ID", com.pitneybowes.api360.Client.ClientUtils.ParameterToString(xPBDeveloperPartnerID)); // header parameter
            }
            if (compactResponse != null)
            {
                localVarRequestOptions.HeaderParameters.Add("compactResponse", com.pitneybowes.api360.Client.ClientUtils.ParameterToString(compactResponse)); // header parameter
            }
            localVarRequestOptions.Data = createManifestRequest;

            localVarRequestOptions.Operation = "ManifestApi.CreateManifest";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (bearerAuth) required
            // bearer authentication required
            if (!string.IsNullOrEmpty(this.Configuration.AccessToken) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
            }

            // make the HTTP request
            var localVarResponse = this.Client.Post<CreateManifest200Response>("/api/v1/manifests", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("CreateManifest", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Create Manifest This operation creates an end-of-day manifest (a compilation of information about all shipments) that combines all shipments of the day into a single form or electronic record, depending on the carrier. For different carriers, the Manifest process varies, e.g., USPS use SCAN Form while FedEx has Manifest Form.
        /// </summary>
        /// <exception cref="com.pitneybowes.api360.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xPBDeveloperPartnerID">This is the Developer Partner ID. When the developer is the only partner, this field is not required. (optional)</param>
        /// <param name="compactResponse">This header defines if the response required is detailed or compact. When value is set to true, it will only return manifest details in response.  (optional)</param>
        /// <param name="createManifestRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of CreateManifest200Response</returns>
        public async System.Threading.Tasks.Task<CreateManifest200Response> CreateManifestAsync(string? xPBDeveloperPartnerID = default(string?), bool? compactResponse = default(bool?), CreateManifestRequest? createManifestRequest = default(CreateManifestRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            com.pitneybowes.api360.Client.ApiResponse<CreateManifest200Response> localVarResponse = await CreateManifestWithHttpInfoAsync(xPBDeveloperPartnerID, compactResponse, createManifestRequest, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Create Manifest This operation creates an end-of-day manifest (a compilation of information about all shipments) that combines all shipments of the day into a single form or electronic record, depending on the carrier. For different carriers, the Manifest process varies, e.g., USPS use SCAN Form while FedEx has Manifest Form.
        /// </summary>
        /// <exception cref="com.pitneybowes.api360.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xPBDeveloperPartnerID">This is the Developer Partner ID. When the developer is the only partner, this field is not required. (optional)</param>
        /// <param name="compactResponse">This header defines if the response required is detailed or compact. When value is set to true, it will only return manifest details in response.  (optional)</param>
        /// <param name="createManifestRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (CreateManifest200Response)</returns>
        public async System.Threading.Tasks.Task<com.pitneybowes.api360.Client.ApiResponse<CreateManifest200Response>> CreateManifestWithHttpInfoAsync(string? xPBDeveloperPartnerID = default(string?), bool? compactResponse = default(bool?), CreateManifestRequest? createManifestRequest = default(CreateManifestRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            com.pitneybowes.api360.Client.RequestOptions localVarRequestOptions = new com.pitneybowes.api360.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = com.pitneybowes.api360.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = com.pitneybowes.api360.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (xPBDeveloperPartnerID != null)
            {
                localVarRequestOptions.HeaderParameters.Add("X-PB-Developer-Partner-ID", com.pitneybowes.api360.Client.ClientUtils.ParameterToString(xPBDeveloperPartnerID)); // header parameter
            }
            if (compactResponse != null)
            {
                localVarRequestOptions.HeaderParameters.Add("compactResponse", com.pitneybowes.api360.Client.ClientUtils.ParameterToString(compactResponse)); // header parameter
            }
            localVarRequestOptions.Data = createManifestRequest;

            localVarRequestOptions.Operation = "ManifestApi.CreateManifest";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (bearerAuth) required
            // bearer authentication required
            if (!string.IsNullOrEmpty(this.Configuration.AccessToken) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PostAsync<CreateManifest200Response>("/api/v1/manifests", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("CreateManifest", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Reprint manifest This operation reprints a manifest for which the initial created manifest request was successful.
        /// </summary>
        /// <exception cref="com.pitneybowes.api360.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xPBDeveloperPartnerID">This is the Developer Partner ID. When the developer is the only partner, this field is not required. (optional)</param>
        /// <param name="compactResponse">This header defines if the response required is detailed or compact. When value is set to true, it will only return manifest details in response. (optional)</param>
        /// <param name="reprintManifestRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>CreateManifest200Response</returns>
        public CreateManifest200Response ReprintManifest(string? xPBDeveloperPartnerID = default(string?), bool? compactResponse = default(bool?), ReprintManifestRequest? reprintManifestRequest = default(ReprintManifestRequest?), int operationIndex = 0)
        {
            com.pitneybowes.api360.Client.ApiResponse<CreateManifest200Response> localVarResponse = ReprintManifestWithHttpInfo(xPBDeveloperPartnerID, compactResponse, reprintManifestRequest);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Reprint manifest This operation reprints a manifest for which the initial created manifest request was successful.
        /// </summary>
        /// <exception cref="com.pitneybowes.api360.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xPBDeveloperPartnerID">This is the Developer Partner ID. When the developer is the only partner, this field is not required. (optional)</param>
        /// <param name="compactResponse">This header defines if the response required is detailed or compact. When value is set to true, it will only return manifest details in response. (optional)</param>
        /// <param name="reprintManifestRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of CreateManifest200Response</returns>
        public com.pitneybowes.api360.Client.ApiResponse<CreateManifest200Response> ReprintManifestWithHttpInfo(string? xPBDeveloperPartnerID = default(string?), bool? compactResponse = default(bool?), ReprintManifestRequest? reprintManifestRequest = default(ReprintManifestRequest?), int operationIndex = 0)
        {
            com.pitneybowes.api360.Client.RequestOptions localVarRequestOptions = new com.pitneybowes.api360.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = com.pitneybowes.api360.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = com.pitneybowes.api360.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (xPBDeveloperPartnerID != null)
            {
                localVarRequestOptions.HeaderParameters.Add("X-PB-Developer-Partner-ID", com.pitneybowes.api360.Client.ClientUtils.ParameterToString(xPBDeveloperPartnerID)); // header parameter
            }
            if (compactResponse != null)
            {
                localVarRequestOptions.HeaderParameters.Add("compactResponse", com.pitneybowes.api360.Client.ClientUtils.ParameterToString(compactResponse)); // header parameter
            }
            localVarRequestOptions.Data = reprintManifestRequest;

            localVarRequestOptions.Operation = "ManifestApi.ReprintManifest";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (bearerAuth) required
            // bearer authentication required
            if (!string.IsNullOrEmpty(this.Configuration.AccessToken) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
            }

            // make the HTTP request
            var localVarResponse = this.Client.Post<CreateManifest200Response>("/api/v1/manifests/reprint", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ReprintManifest", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Reprint manifest This operation reprints a manifest for which the initial created manifest request was successful.
        /// </summary>
        /// <exception cref="com.pitneybowes.api360.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xPBDeveloperPartnerID">This is the Developer Partner ID. When the developer is the only partner, this field is not required. (optional)</param>
        /// <param name="compactResponse">This header defines if the response required is detailed or compact. When value is set to true, it will only return manifest details in response. (optional)</param>
        /// <param name="reprintManifestRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of CreateManifest200Response</returns>
        public async System.Threading.Tasks.Task<CreateManifest200Response> ReprintManifestAsync(string? xPBDeveloperPartnerID = default(string?), bool? compactResponse = default(bool?), ReprintManifestRequest? reprintManifestRequest = default(ReprintManifestRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            com.pitneybowes.api360.Client.ApiResponse<CreateManifest200Response> localVarResponse = await ReprintManifestWithHttpInfoAsync(xPBDeveloperPartnerID, compactResponse, reprintManifestRequest, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Reprint manifest This operation reprints a manifest for which the initial created manifest request was successful.
        /// </summary>
        /// <exception cref="com.pitneybowes.api360.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xPBDeveloperPartnerID">This is the Developer Partner ID. When the developer is the only partner, this field is not required. (optional)</param>
        /// <param name="compactResponse">This header defines if the response required is detailed or compact. When value is set to true, it will only return manifest details in response. (optional)</param>
        /// <param name="reprintManifestRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (CreateManifest200Response)</returns>
        public async System.Threading.Tasks.Task<com.pitneybowes.api360.Client.ApiResponse<CreateManifest200Response>> ReprintManifestWithHttpInfoAsync(string? xPBDeveloperPartnerID = default(string?), bool? compactResponse = default(bool?), ReprintManifestRequest? reprintManifestRequest = default(ReprintManifestRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            com.pitneybowes.api360.Client.RequestOptions localVarRequestOptions = new com.pitneybowes.api360.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = com.pitneybowes.api360.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = com.pitneybowes.api360.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (xPBDeveloperPartnerID != null)
            {
                localVarRequestOptions.HeaderParameters.Add("X-PB-Developer-Partner-ID", com.pitneybowes.api360.Client.ClientUtils.ParameterToString(xPBDeveloperPartnerID)); // header parameter
            }
            if (compactResponse != null)
            {
                localVarRequestOptions.HeaderParameters.Add("compactResponse", com.pitneybowes.api360.Client.ClientUtils.ParameterToString(compactResponse)); // header parameter
            }
            localVarRequestOptions.Data = reprintManifestRequest;

            localVarRequestOptions.Operation = "ManifestApi.ReprintManifest";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (bearerAuth) required
            // bearer authentication required
            if (!string.IsNullOrEmpty(this.Configuration.AccessToken) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PostAsync<CreateManifest200Response>("/api/v1/manifests/reprint", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ReprintManifest", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

    }
}
